{% extends 'base.html.twig' %}

{% block title %}FileMaker Auth Debug - {{ parent() }}{% endblock %}

{% block body %}
<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fas fa-key text-warning me-2"></i>
                        FileMaker Authentication Debug
                    </h4>
                    <a href="{{ path('debug_index') }}" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>
                        Zur√ºck zum Debug Center
                    </a>
                </div>
                <div class="card-body">
                    
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        Diese Seite testet ausschlie√ülich die FileMaker-Authentifizierung Schritt f√ºr Schritt.
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">
                                        <i class="fas fa-cog me-2"></i>
                                        Connection Test
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <p>Testet Umgebungsvariablen und Netzwerk-Konnektivit√§t</p>
                                    <button class="btn btn-primary" onclick="runConnectionTest()">
                                        <i class="fas fa-network-wired me-1"></i>
                                        Connection Test starten
                                    </button>
                                    <div id="connection-result" class="mt-3"></div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">
                                        <i class="fas fa-key me-2"></i>
                                        Authentication Test
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <p>Testet die FileMaker-Authentifizierung und Token-Verwaltung</p>
                                    <button class="btn btn-success" onclick="runAuthTest()">
                                        <i class="fas fa-sign-in-alt me-1"></i>
                                        Auth Test starten
                                    </button>
                                    <div id="auth-result" class="mt-3"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mt-4">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="mb-0">
                                        <i class="fas fa-terminal me-2"></i>
                                        Test-Protokoll
                                    </h5>
                                </div>
                                <div class="card-body">
                                    <div id="log-output" class="bg-dark text-light p-3 rounded" style="height: 400px; overflow-y: auto; font-family: monospace;">
                                        <div class="text-muted">Klicken Sie einen Test-Button, um zu beginnen...</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function log(message, type = 'info') {
    const output = document.getElementById('log-output');
    const timestamp = new Date().toLocaleTimeString();
    const colors = {
        'info': 'text-info',
        'success': 'text-success', 
        'warning': 'text-warning',
        'error': 'text-danger'
    };
    
    const div = document.createElement('div');
    div.className = colors[type] || 'text-light';
    div.innerHTML = `[${timestamp}] ${message}`;
    
    output.appendChild(div);
    output.scrollTop = output.scrollHeight;
}

function clearLog() {
    document.getElementById('log-output').innerHTML = '';
}

async function runConnectionTest() {
    clearLog();
    log('üîÑ Starte Connection Test...', 'info');
    
    try {
        const response = await fetch('/simple-auth-test.php');
        const data = await response.json();
        
        log('‚úÖ Connection Test abgeschlossen', 'success');
        
        // Environment Check
        log('üìã Environment Variables:', 'info');
        for (const [key, value] of Object.entries(data.environment_check)) {
            const status = value.exists ? '‚úÖ' : '‚ùå';
            log(`  ${status} ${key}: ${value.value_preview}`, value.exists ? 'success' : 'error');
        }
        
        // Auth Test
        if (data.auth_test) {
            log('üîê Authentication Test:', 'info');
            if (data.auth_test.status === 'success') {
                log(`  ‚úÖ Auth successful - Token: ${data.auth_test.token_preview}`, 'success');
            } else if (data.auth_test.status === 'skipped') {
                log(`  ‚ö†Ô∏è ${data.auth_test.message}`, 'warning');
            } else {
                log(`  ‚ùå Auth failed: HTTP ${data.auth_test.http_code}`, 'error');
                if (data.auth_test.response_data && data.auth_test.response_data.messages) {
                    for (const msg of data.auth_test.response_data.messages) {
                        log(`    FileMaker Error ${msg.code}: ${msg.message}`, 'error');
                    }
                }
            }
        }
        
        document.getElementById('connection-result').innerHTML = 
            `<div class="alert alert-success">Connection Test abgeschlossen - siehe Protokoll</div>`;
            
    } catch (error) {
        log('‚ùå Connection Test fehlgeschlagen: ' + error.message, 'error');
        document.getElementById('connection-result').innerHTML = 
            `<div class="alert alert-danger">Fehler: ${error.message}</div>`;
    }
}

async function runAuthTest() {
    log('üîÑ Starte Authentication Test...', 'info');
    
    try {
        const response = await fetch('/simple-auth-test.php');
        const data = await response.json();
        
        // Gleiche Verarbeitung wie Connection Test
        log('ÔøΩ Environment Variables:', 'info');
        for (const [key, value] of Object.entries(data.environment_check)) {
            const status = value.exists ? '‚úÖ' : '‚ùå';
            log(`  ${status} ${key}: ${value.value_preview}`, value.exists ? 'success' : 'error');
        }
        
        // Auth Test
        if (data.auth_test) {
            log('üîê Authentication Test:', 'info');
            if (data.auth_test.status === 'success') {
                log(`  ‚úÖ Auth successful - Token: ${data.auth_test.token_preview}`, 'success');
            } else if (data.auth_test.status === 'skipped') {
                log(`  ‚ö†Ô∏è ${data.auth_test.message}`, 'warning');
            } else {
                log(`  ‚ùå Auth failed: HTTP ${data.auth_test.http_code}`, 'error');
                if (data.auth_test.response_data && data.auth_test.response_data.messages) {
                    for (const msg of data.auth_test.response_data.messages) {
                        log(`    FileMaker Error ${msg.code}: ${msg.message}`, 'error');
                    }
                }
            }
        }
        
        log(`üéØ Status: ${data.status}`, data.status === 'working' ? 'success' : 'error');
        
        const overallStatus = data.status === 'working' && data.auth_test && data.auth_test.status === 'success' ? 'success' : 'danger';
        document.getElementById('auth-result').innerHTML = 
            `<div class="alert alert-${overallStatus}">${data.message}</div>`;
            
    } catch (error) {
        log('‚ùå Auth Test fehlgeschlagen: ' + error.message, 'error');
        document.getElementById('auth-result').innerHTML = 
            `<div class="alert alert-danger">Fehler: ${error.message}</div>`;
    }
}
</script>
{% endblock %}